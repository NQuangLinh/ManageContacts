@model ManageContact.Models.ContactActionModel

@{
    ViewBag.Title = "EditContact";
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
}

<h5>Edit Contact</h5>

@using (Html.BeginForm("EditContact","Customer",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDContact)

        <div class="form-group">
            @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PhoneNumber, new { htmlAttributes = new { @style = "width: 500px;" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDNetworkOperator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDNetworkOperator,null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDNetworkOperator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDAddress, null,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDPosition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDPosition,null,new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="text-center">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />

               
                @if (Request.UrlReferrer != null)
                {
                    <input type="button" value="Cancel" class="btn btn-warning" onclick="history.go(-1); return false;" href="#" />

                }
            </div>
        </div>
    </div>
}